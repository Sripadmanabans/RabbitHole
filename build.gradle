apply plugin: "com.github.ben-manes.versions"

buildscript {
  ext.buildConfig = [
      "compileSdk": 30,
      "minSdk"    : 29,
      "targetSdk" : 30,

      "version"   : [
          "major": 1,
          "minor": 0,
          "patch": 0,
          "build": 0,
      ],
  ]
  ext.buildConfig.version["name"] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
  ext.buildConfig.version["fullName"] = "${buildConfig.version.name}.${buildConfig.version.build}"
  ext.buildConfig.version["code"] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build

  ext.versions = [
      "dagger"             : "2.28.3",
      "hilt"               : "1.0.0-alpha02",
      "kotlin"             : "1.4.0",
      "kotlinCoroutines"   : "1.3.9",
      "kotlinSerialization": "1.0.0-RC",
      "okhttp"             : "4.8.1",
      "compose"            : "1.0.0-alpha02",
  ]

  ext.deps = [
      "kotlin"  : [
          "stdlib"       : [
              "common": "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
              "jdk"   : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
          ],
          "test"         : [
              "common"     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
              "annotations": "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
              "jdk"        : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
          ],
          "coroutines"   : [
              "common" : "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${versions.kotlinCoroutines}",
              "jdk"    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
              "jdk8"   : "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${versions.kotlinCoroutines}",
              "android": "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
          ],
          "serialization": [
              "common": "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${versions.kotlinSerialization}",
              "jdk"   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${versions.kotlinSerialization}",
          ],
      ],
      "androidx": [
          "appCompat": "androidx.appcompat:appcompat:1.3.0-alpha02",
          "core"     : "androidx.core:core-ktx:1.5.0-alpha02",
          "hilt"     : [
              "common"   : "androidx.hilt:hilt-common:${versions.hilt}",
              "viewmodel": "androidx.hilt:hilt-lifecycle-viewmodel:${versions.hilt}",
              "work"     : "androidx.hilt:hilt-work:${versions.hilt}",
              "compiler" : "androidx.hilt:hilt-compiler:${versions.hilt}",
          ],
      ],
      "material": "com.google.android.material:material:1.3.0-alpha02",
      "okhttp"  : [
          "client"       : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
          "logging"      : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
          "mockWebServer": "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
      ],
      "retrofit": [
          "client": "com.squareup.retrofit2:retrofit:${versions.retrofit}",
      ],
      "dagger"  : [
          "runtime" : "com.google.dagger:dagger:${versions.dagger}",
          "compiler": "com.google.dagger:dagger-compiler:${versions.dagger}",
          "hilt"    : [
              "runtime" : "com.google.dagger:hilt-android:${versions.dagger}-alpha",
              "compiler": "com.google.dagger:hilt-android-compiler:${versions.dagger}-alpha",
              "testing" : "com.google.dagger:hilt-android-testing:${versions.dagger}-alpha",
          ],
      ],
      "timber"  : [
          "common" : "com.jakewharton.timber:timber-common:5.0.0-SNAPSHOT",
          "jdk"    : "com.jakewharton.timber:timber-jdk:5.0.0-SNAPSHOT",
          "android": "com.jakewharton.timber:timber-android:5.0.0-SNAPSHOT",
      ],
      "compose" : [
          "compiler"  : "androidx.compose:compose-compiler:${versions.compose}",
          "animation" : [
              "animation": "androidx.compose.animation:animation:${versions.compose}",
              "core"     : "androidx.compose.animation:animation-core:${versions.compose}",
          ],
          "foundation": [
              "foundation": "androidx.compose.foundation:foundation:${versions.compose}",
              "layout"    : "androidx.compose.foundation:foundation-layout:${versions.compose}",
              "text"      : "androidx.compose.foundation:foundation-text:${versions.compose}",
          ],
          "material"  : [
              "material": "androidx.compose.material:material:${versions.compose}",
              "icons"   : [
                  "core"    : "androidx.compose.material:material-icons-core:${versions.compose}",
                  "extended": "androidx.compose.material:material-icons-extended:${versions.compose}",
              ],
          ],
          "runtime"   : [
              "runtime"   : "androidx.compose.runtime:runtime:${versions.compose}",
              "dispatch"  : "androidx.compose.runtime:runtime-dispatch:${versions.compose}",
              "livedata"  : "androidx.compose.runtime:runtime-livedata:${versions.compose}",
              "savedState": "androidx.compose.runtime:runtime-saved-instance-state:${versions.compose}"
          ],
          "ui"        : [
              "ui"         : "androidx.compose.ui:ui:${versions.compose}",
              "geometry"   : "androidx.compose.ui:ui-geometry:${versions.compose}",
              "graphics"   : "androidx.compose.ui:ui-graphics:${versions.compose}",
              "text"       : "androidx.compose.ui:ui-text:${versions.compose}",
              "textAndroid": "androidx.compose.ui:ui-text:${versions.compose}",
              "tooling"    : "androidx.ui:ui-tooling:${versions.compose}",
              "unit"       : "androidx.compose.ui:ui-unit:${versions.compose}",
              "util"       : "androidx.compose.ui:ui-util:${versions.compose}",
              "viewBinding": "androidx.compose.ui:ui-viewbinding:${versions.compose}",
          ],
      ],
  ]

  ext.classpaths = [
      "android"      : "com.android.tools.build:gradle:4.2.0-alpha09",
      "ben"          : "com.github.ben-manes:gradle-versions-plugin:0.30.0",
      "hilt"         : "com.google.dagger:hilt-android-gradle-plugin:${versions.dagger}-alpha",
      "ktlint"       : "org.jlleitschuh.gradle:ktlint-gradle:9.3.0",
      "detekt"       : "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.12.0",
      "kotlin"       : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
      "serialization": "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}",
  ]

  repositories {
    google()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    gradlePluginPortal()
  }

  dependencies {
    classpath classpaths.android
    classpath classpaths.ben
    classpath classpaths.hilt
    classpath classpaths.kotlin
    classpath classpaths.serialization
    classpath classpaths.ktlint
    classpath classpaths.detekt
  }
}

allprojects {
  apply plugin: "org.jlleitschuh.gradle.ktlint"
  apply plugin: "io.gitlab.arturbosch.detekt"

  repositories {
    google()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    gradlePluginPortal()
  }

  afterEvaluate {
    tasks.findByName("check")?.dependsOn("detekt")
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { details ->
        // Force all Kotlin stdlib artifacts to use the same version.
        if (details.requested.group == "org.jetbrains.kotlin" && details.requested.name.startsWith("kotlin-stdlib")) {
          details.useVersion versions.kotlin
        }
      }
    }
  }

  plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
    plugin.extension.compileOptions {
      sourceCompatibility = JavaVersion.VERSION_1_8
      targetCompatibility = JavaVersion.VERSION_1_8
    }
  }

  tasks.withType(JavaCompile).configureEach { task ->
    task.sourceCompatibility = JavaVersion.VERSION_1_8
    task.targetCompatibility = JavaVersion.VERSION_1_8
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = "1.8"
      useIR = true
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
    task.kotlinOptions {
      freeCompilerArgs += [
          "-XXLanguage:+NewInference",
          "-progressive",
          "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
          "-Xopt-in=kotlinx.coroutines.FlowPreview",
          "-Xopt-in=kotlin.Experimental",
          "-Xopt-in=kotlin.RequiresOptIn",
          "-Xopt-in=kotlin.time.ExperimentalTime",
          "-Xallow-jvm-ir-dependencies",
      ]
    }
  }

  tasks.withType(Test) {
    testLogging {
      events "skipped", "failed", "passed"
    }
  }
  // Issue: https://issuetracker.google.com/issues/37056080
  //tasks.withType(AndroidTestTask) {
  //  testLogging {
  //    events "skipped", "failed", "passed"
  //  }
  //}

  // Configuration documentation: https://github.com/JLLeitschuh/ktlint-gradle#configuration
  ktlint {
    version = "0.38.1"
    verbose = true
    reporters {
      // Default "plain" reporter is actually harder to read.
      reporter "json"
    }
    disabledRules = [
        // IntelliJ refuses to sort imports correctly.
        // This is a known issue: https://github.com/pinterest/ktlint/issues/527
        "import-ordering"
    ]
  }

  detekt {
    config = files("${rootDir}/detekt.yml")
    // Treat config file as an override for the default config.
    buildUponDefaultConfig = true
  }
}